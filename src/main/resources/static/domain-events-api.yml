openapi: '3.0.1'
info:
  version: '0.1.0'
  title: 'AP Domain events'
  description: Get information about events in the Approved Premises domain
servers:
  - url: /events
paths:
  /application-submitted/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Apply' events"
      summary: An application-submitted event
      responses:
        '200':
          description: The application-submitted corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                properties:
                  id:
                    $ref: '#/components/schemas/EventId'
                  timestamp:
                    type: string
                    example: '2022-11-30T14:53:44'
                    format: date-time
                  eventType:
                    type: string
                    example: approved-premises.application.submitted
                    readOnly: true
                  eventDetails:
                    $ref: '#/components/schemas/ApplicationSubmitted'

        404:
          description: No application-submitted event found for the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /application-withdrawn/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Apply' events"
      summary: An application-withdrawn event
      responses:
        '200':
          description: The application-withdrawn event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                properties:
                  id:
                    $ref: '#/components/schemas/EventId'
                  timestamp:
                    type: string
                    example: '2022-11-30T14:53:44'
                    format: date-time
                  eventType:
                    type: string
                    example: approved-premises.application.withdrawn
                    readOnly: true
                  eventDetails:
                    $ref: '#/components/schemas/ApplicationWithdrawn'

        404:
          description: No application-withdrawn event found for the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /application-assessed/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Apply' events"
      summary: An 'application-assessed' event
      responses:
        '200':
          description: The 'application-assessed' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                properties:
                  id:
                    $ref: '#/components/schemas/EventId'
                  timestamp:
                    type: string
                    example: '2022-11-30T14:53:44'
                    format: date-time
                  eventType:
                    type: string
                    example: approved-premises.application.assessed
                    readOnly: true
                  eventDetails:
                    $ref: '#/components/schemas/ApplicationAssessed'

        404:
          description: No application-assessed event found for the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /booking-made/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Mini-manage' events"
      summary: A 'booking-made' event
      responses:
        '200':
          description: The 'booking-made' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                properties:
                  id:
                    $ref: '#/components/schemas/EventId'
                  timestamp:
                    type: string
                    example: '2022-11-30T14:53:44'
                    format: date-time
                  eventType:
                    type: string
                    example: approved-premises.booking.made
                    readOnly: true
                  eventDetails:
                    $ref: '#/components/schemas/BookingMade'

        404:
          description: No 'booking-made' event found for the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /booking-cancelled/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Mini-manage' events"
      summary: A 'booking-cancelled' event
      responses:
        '200':
          description: The 'booking-cancelled' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                properties:
                  id:
                    $ref: '#/components/schemas/EventId'
                  timestamp:
                    type: string
                    example: '2022-11-30T14:53:44'
                    format: date-time
                  eventType:
                    type: string
                    example: approved-premises.booking.cancelled
                    readOnly: true
                  eventDetails:
                    $ref: '#/components/schemas/BookingCancelled'

        404:
          description: No 'booking-made' event found for the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /booking-not-made/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Match' events"
      summary: A 'booking-not-made' event
      responses:
        '200':
          description: The 'booking-not-made' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                properties:
                  id:
                    $ref: '#/components/schemas/EventId'
                  timestamp:
                    type: string
                    example: '2022-11-30T14:53:44'
                    format: date-time
                  eventType:
                    type: string
                    example: approved-premises.booking.not-made
                    readOnly: true
                  eventDetails:
                    $ref: '#/components/schemas/BookingNotMade'

        404:
          description: No 'booking-not-made' event found for the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /person-arrived/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Mini-manage' events"
      summary: A 'person-arrived' event
      responses:
        '200':
          description: The 'person-arrived' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                properties:
                  id:
                    $ref: '#/components/schemas/EventId'
                  timestamp:
                    type: string
                    example: '2022-11-30T14:53:44'
                    format: date-time
                  eventType:
                    type: string
                    example: approved-premises.person.arrived
                    readOnly: true
                  eventDetails:
                    $ref: '#/components/schemas/PersonArrived'

        404:
          description: No 'person-arrived' event found for the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /person-not-arrived/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Mini-manage' events"
      summary: A 'person-not-arrived' event
      responses:
        '200':
          description: The 'person-not-arrived' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                properties:
                  id:
                    $ref: '#/components/schemas/EventId'
                  timestamp:
                    type: string
                    example: '2022-11-30T14:53:44'
                    format: date-time
                  eventType:
                    type: string
                    example: approved-premises.person.not-arrived
                    readOnly: true
                  eventDetails:
                    $ref: '#/components/schemas/PersonNotArrived'

        404:
          description: No 'person-not-arrived' event found for the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /person-departed/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Mini-manage' events"
      summary: A 'person-departed' event
      responses:
        '200':
          description: The 'person-departed' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                properties:
                  id:
                    $ref: '#/components/schemas/EventId'
                  timestamp:
                    type: string
                    example: '2022-11-30T14:53:44'
                    format: date-time
                  eventType:
                    type: string
                    example: approved-premises.person.departed
                    readOnly: true
                  eventDetails:
                    $ref: '#/components/schemas/PersonDeparted'

        404:
          description: No 'person-not-arrived' event found for the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    EventId:
      description: The UUID of an event
      type: string
      example: 364145f9-0af8-488e-9901-b4c46cd9ba37

    DeliusEventNumber:
      description: Used in Delius to identify the 'event' via the first active conviction's 'index'
      type: string
      example: "7"

    ApplicationId:
      description: The UUID of an application for an AP place
      type: string
      example: 484b8b5e-6c3b-4400-b200-425bbe410713

    ApplicationUrl:
      description: The URL on the Approved Premises service at which a user can view a representation of an AP application and related resources, including bookings
      type: string
      example: https://approved-premises-dev.hmpps.service.justice.gov.uk/applications/484b8b5e-6c3b-4400-b200-425bbe410713

    BookingId:
      description: The UUID of booking for an AP place
      type: string
      example: 14c80733-4b6d-4f35-b724-66955aac320c

    LegacyApCode:
      description: The 'Q code' used in Delius to identify an Approved Premises
      type: string
      example: Q057

    StaffMember:
      description: A member of probation or AP staff
      type: object
      properties:
        staffCode:
          type: string
          example: N54A999
          readOnly: true
        staffIdentifier:
          type: integer
          example: 1501234567
          readOnly: true
        forenames:
          type: string
          example: John
        surname:
          type: string
          example: Smith
        username:
          type: string
          example: JohnSmithNPS
    Cru:
      type: object
      properties:
        code:
          type: string
          example: N02
          readOnly: true
        name:
          type: string
          example: NPS North East
          readOnly: true
    ProbationArea:
      type: object
      properties:
        code:
          type: string
          example: N02
          readOnly: true
        name:
          type: string
          example: NPS North East
          readOnly: true
    PersonReference:
      type: object
      properties:
        crn:
          type: string
          example: C123456
          readOnly: true
        noms:
          type: string
          example: A1234ZX
          readOnly: true
    ApplicationSubmitted:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        targetLocation:
          type: string
          example: Gateshead
        probationArea:
          $ref: '#/components/schemas/ProbationArea'
        applicationCru:
          $ref: '#/components/schemas/Cru'
        submittedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
          readOnly: true
        submittedBy:
          $ref: '#/components/schemas/StaffMember'

    ApplicationWithdrawn:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        withdrawnAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
          readOnly: true
        withdrawnBy:
          $ref: '#/components/schemas/StaffMember'
        withdrawalReason:
          $ref: '#/components/schemas/CancellationReason'

    ApplicationAssessed:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        assessedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
          readOnly: true
        assessedBy:
          $ref: '#/components/schemas/StaffMember'
        assessmentArea:
          $ref: '#/components/schemas/ProbationArea'
        assessmentCru:
          $ref: '#/components/schemas/Cru'
        decision:
          type: string
          example: Rejected
        decisionRationale:
          type: string
          example: Risk too low

    BookingMade:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        createdAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
          readOnly: true
        bookedBy:
          $ref: '#/components/schemas/StaffMember'
        bookingCru:
          $ref: '#/components/schemas/Cru'
        premises:
          $ref: '#/components/schemas/Premises'
        arrivalOn:
          type: string
          example: '2023-01-30'
          format: date
          readOnly: true
        departureOn:
          type: string
          example: '2023-04-30'
          format: date
          readOnly: true
        keyWorker:
          $ref: '#/components/schemas/StaffMember'

    BookingNotMade:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        attemptedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
          readOnly: true
        attemptedBy:
          $ref: '#/components/schemas/StaffMember'
        matchingCru:
          $ref: '#/components/schemas/Cru'
        failureDescription:
          type: string
          example: No availability

    BookingCancelled:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        premises:
          $ref: '#/components/schemas/Premises'
        cancelledAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
          readOnly: true
        cancelledBy:
          $ref: '#/components/schemas/StaffMember'
        cancellationReason:
          $ref: '#/components/schemas/CancellationReason'

    PersonArrived:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        premises:
          $ref: '#/components/schemas/Premises'
        keyWorker:
          $ref: '#/components/schemas/StaffMember'
        arrivedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        expectedDepartureOn:
          type: string
          example: '2023-02-28'
          format: date
        notes:
          type: string
          example: Arrived a day late due to rail strike. Informed in advance by COM.

    PersonNotArrived:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        premises:
          $ref: '#/components/schemas/Premises'
        expectedArrivalOn:
          type: string
          example: '2022-11-29'
          format: date
        recordedBy:
          $ref: '#/components/schemas/StaffMember'
        notes:
          type: string
          example: We learnt that Mr Smith is in hospital.

    PersonDeparted:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        keyWorker:
          $ref: '#/components/schemas/StaffMember'
        premises:
          $ref: '#/components/schemas/Premises'
        departedAt:
          type: string
          example: '2023-03-30T14:51:30'
          format: date-time
        reason:
          type: string
          enum:
            - Absconded, still at large
            - Admitted to Hospital
            - Arrested, remanded in custody, or sentenced
            - Bed Withdrawn
            - Breach / recall (abscond)
            - Breach / recall (behaviour / increasing risk)
            - Breach / recall (curfew)
            - Breach / recall (house rules)
            - Breach / recall (licence or bail condition)
            - Breach / recall (other)
            - Breach / recall (positive drugs test)
            - Died
            - End of ROTL
            - Left of own volition
            - Order / licence expired
            - Other
            - Planned move-on
        legacyReasonCode:
          type: string
          enum:
            - J
            - Q
            - H
            - X
            - A
            - D
            - F
            - B
            - E
            - G
            - C
            - P
            - V
            - K
            - N
            - W
            - O
        destination:
          type: object
          properties:
            premises:
              $ref: '#/components/schemas/DestinationPremises'
            moveOnCategory:
              $ref: '#/components/schemas/MoveOnCategory'
            destinationProvider:
              $ref: '#/components/schemas/DestinationProvider'


    Premises:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Hope House
        apCode:
          type: string
          example: NEHOPE1
        legacyApCode:
          $ref: '#/components/schemas/LegacyApCode'
        probationArea:
          $ref: '#/components/schemas/ProbationArea'

    DestinationPremises:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: New Place
        apCode:
          type: string
          example: NENEW1
        legacyApCode:
          type: string
          example: Q061
        probationArea:
          $ref: '#/components/schemas/ProbationArea'

    CancellationReason:
      type: object
      properties:
        description:
          type: string
          enum:
            - Custodial disposal - RIC
            - Offer Withdrawn
            - Other
            - Parole Licence not granted
            - Withdrawn by Referrer
        legacyCancellationCode:
          type: string
          enum:
            - 1H
            - B
            - D
            - 4I
            - C

    MoveOnCategory:
      type: object
      properties:
        description:
          type: string
          enum:
            - B&B / Temp / Short-Term Housing
            - Custody
            - Deported/ Detention Centre/IRC
            - Housing Association - Rented
            - Living with Family/ Partner/ Other
            - Local Authority - Rented
            - No Fixed Abode
            - Not Applicable
            - Owner Occupied
            - Private Rented
            - Supported Housing
            - Transferred to different AP
        legacyMoveOnCategoryCode:
          type: string
          enum:
            - MC05
            - MC19
            - MC10
            - MC03
            - MC07
            - MC02
            - MC14
            - MCNA
            - MC08
            - MC04
            - MC06
            - P
        code:
          type: string
          example: ABC123

    DestinationProvider:
      type: object
      properties:
        description:
          type: string
          example: Ext - North East Region
        code:
          type: string
          example: XYZ456

    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string